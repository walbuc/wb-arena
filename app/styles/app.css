/* purgecss start ignore */
@tailwind base;
@tailwind components;
/* purgecss end ignore */

@tailwind utilities;
@tailwind screens;

/* tailwind is configured to prefer this font */
@font-face {
  font-family: 'Matter';
  src: url('/fonts/Matter-Medium.woff2') format('woff2'),
    url('/fonts/Matter-Medium.woff') format('woff');
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Matter';
  src: url('/fonts/Matter-Regular.woff2') format('woff2'),
    url('/fonts/Matter-Regular.woff') format('woff');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}


@layer components {
  
  .card {
    --yellow: #ffc600;
    --pink: #ff3f8e;
    --color1: var(--yellow);
    --color2: var(--pink);
    --inline: 5px;
    --block: 0;
    --duration: 300ms;
    --padding: 4px;
    --border: 3px;
    --radius: 0.5rem;
    box-shadow: inset 0 0 0 var(--border) grey;
    padding: var(--padding);
    border-radius: calc(var(--radius) + var(--padding));
    overflow: hidden;
    display: grid;
    margin-bottom: var(--gap);
    cursor: pointer;
    
  }

  .card a {
    display: block;
    border: 0;
    color: white;
    padding: 10px;
    position: relative;
    border-radius: var(--radius);
    background: black;
    font-weight: 900;
    font-size: 15px;
  }

  .card a::before {
    content: "";
    display: block;
    width: calc(100% + 2px);
    height: calc(100% + 2px);
    position: absolute;
    top: -1px;
    left: -1px;
    z-index: -1;
    border-radius: var(--radius);
    background: linear-gradient(45deg, var(--color2), var(--color1));
  }
/* 
  @keyframes rotateBG {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  } */

  .tail {
    transition: all var(--duration);
    width: var(--inline);
    height: var(--block);
    background: var(--color1);
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
  }

  .tail.top {
    background-image: linear-gradient(to right, var(--color1), var(--color2));
    height: var(--inline);
    width: var(--block);
    transition-delay: calc(var(--duration) * 2);
  }

  .tail.right {
    right: 0;
    left: unset;
    background: var(--color2);
    transition-delay: var(--duration);
  }

  .tail.bottom {
    height: var(--inline);
    width: var(--block);
    bottom: 0;
    right: 0;
    left: unset;
    top: unset;
    background-image: linear-gradient(to right, var(--color1), var(--color2));
    transition-delay: 0ms;
  }

  .tail.left {
    bottom: 0;
    top: unset;
    transition-delay: calc(var(--duration) * 3);
  }

  .snake:where(.start, :hover) .tail.top {
    transition-delay: var(--duration);
  }
  .snake:where(.start, :hover) .tail.right {
    transition-delay: calc(var(--duration) * 2);
  }
  .snake:where(.start, :hover) .tail.bottom {
    transition-delay: calc(var(--duration) * 3);
  }
  .snake:where(.start, :hover) .tail.left {
    transition-delay: 0ms;
  }

  .snake {
    position: relative;
  }

  .snake.start .tail {
    --block: 0;
  }
  .snake:hover .tail {
    --block: 100%;
  }
 
  .card h3:after {
    content: "";
    display: block;
    width: 100%;
    height: var(--padding);
    border-radius: 2px;
    background: linear-gradient(to right, var(--color1), var(--color2));
    margin-top: 10px;
  }
}


@layer utilities {
  .focus-ring {
    @apply focus:outline-none focus-within:outline-none ring-team-current ring-offset-4 ring-offset-white transition duration-300 focus-within:ring-2 focus-within:ring-team-current hover:ring-2 hover:ring-team-current focus:ring-2 focus:ring-team-current disabled:ring-0 group-hover:ring-2 group-hover:ring-team-current group-focus:ring-2 group-focus:ring-team-current dark:ring-offset-gray-900;
  }

  .focus-ring.danger {
    @apply ring-red-500 focus-within:ring-red-500 hover:ring-red-500 focus:ring-red-500 group-hover:ring-red-500 group-focus:ring-red-500 dark:focus-within:ring-red-500 dark:hover:ring-red-500 dark:focus:ring-red-500 dark:group-hover:ring-red-500 group-focus:dark:ring-red-500;
  }

  .bg-primary {
    @apply bg-white dark:bg-gray-900;
  }

  .bg-secondary {
    @apply bg-gray-100 dark:bg-gray-800;
  }

  .bg-alt {
    @apply bg-gray-200 dark:bg-gray-700;
  }

  .bg-inverse {
    @apply bg-black dark:bg-white;
  }

  .border-primary {
    @apply border-gray-900 dark:border-white;
  }

  .border-secondary {
    @apply border-gray-200 dark:border-gray-600;
  }

  .text-primary {
    @apply text-black dark:text-white;
  }

  .text-secondary {
    @apply dark:text-slate-500 text-gray-500;
  }

  .text-inverse {
    @apply text-white dark:text-black;
  }
}


@layer base { 
  :root {
  --color-black: #000;
  --color-white: #fff;
  --color-blue-100: #e8f2ff;
  --color-blue-500: #4b96ff;
  --color-slate-500: #a9adc1;
  --color-gray-100: #f7f7f7;
  --color-gray-200: #e6e9ee;
  --color-gray-300: #dde0e4;
  --color-gray-400: #818890;
  --color-gray-500: #535661;
  --color-gray-600: #4b4c53;
  --color-gray-700: #3a3d4a;
  --color-gray-800: #2e3039;
  --color-gray-900: #1f2028;
  --color-green-100: #e7f9ed;
  --color-green-500: #30c85e;
  --color-green-600: #68d94a;
  --color-red-500: #ff4545;
  --color-yellow-500: #ffd644;
  --color-team-unknown: #818890;
  --color-team-blue: #36a3ff;
  --color-team-red: #ff4545;
  /* yellow in light mode is... hard */
  --color-team-yellow: #a08600;
  --color-yellow-500: #a08600;
  --color-yellow-500-inverted: #ffd644; 
  }
}

.light, .dark .text-inverse {
  --color-team-unknown: var(--color-black);
  --bg-primary: var(--color-white);
  --bg-secondary: var(--color-gray-100);
  --bg-alt: var(--color-gray-200);
  --border-secondary: var(--color-gray-200);
  --text-primary: var(--color-black);
  --text-secondary: var(--color-gray-500);
  color-scheme: light;
}

.dark,
.light .text-inverse {
  --color-team-yellow: #ffd644;
  --color-yellow-500: #ffd644;
  --color-yellow-500-inverted: #a08600;
  --color-team-unknown: var(--color-white);
  --bg-primary: var(--color-gray-900);
  --bg-secondary: var(--color-gray-800);
  --bg-alt: var(--color-gray-700);
  --border-secondary: var(--color-gray-600);
  --text-primary: var(--color-white);
  --text-secondary: var(--color-slate-500);
  color-scheme: dark;
}

.set-color-team-current-yellow {
  --color-team-current: var(--color-team-yellow);
}

.set-color-team-current-red {
  --color-team-current: var(--color-team-red);
}

.set-color-team-current-blue {
  --color-team-current: var(--color-team-blue);
}

.dark .set-color-team-current-unknown {
  --color-team-current: var(--color-white);
}

.light .set-color-team-current-unknown {
  --color-team-current: var(--color-black);
}

:focus:not(:focus-visible) {
  outline: none;
}

body {
  overflow-x: hidden;
}

* {
  -webkit-tap-highlight-color: transparent;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-text-fill-color: black !important;
  -webkit-box-shadow: 0 0 0 999px var(--color-gray-100) inset !important;
  box-shadow: 0 0 0 999px var(--color-gray-100) inset !important;
  background-clip: content-box !important;
}

.dark input:-webkit-autofill,
.dark input:-webkit-autofill:hover,
.dark input:-webkit-autofill:focus,
.dark input:-webkit-autofill:active {
  -webkit-text-fill-color: white !important;
  -webkit-box-shadow: 0 0 0 999px var(--color-gray-800) inset !important;
  box-shadow: 0 0 0 999px var(--color-gray-800) inset !important;
  background-clip: content-box !important;
}

input:-webkit-autofill::first-line {
  font-size: 1.125rem;
  font-weight: 500;
  font-family: Matter, ui-sans-serif, system-ui, -apple-system,
    BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans',
    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
    'Noto Color Emoji';
}

/* I kinda feel like this should be the default... 🤷‍♂️ */
[hidden] {
  pointer-events: none;
}

/* These elements get removed before hydration but they can look funny before hydrating */
dark-mode,
light-mode {
  display: none;
}

@media (prefers-reduced-motion: no-preference) {
  :focus {
    transition: outline-offset 0.1s ease;
    outline-offset: 4px;
  }
}

a {
  color: var(--color-team-current);
}

.underlined {
  position: relative;
  text-decoration: none !important;
  white-space: nowrap;
}

.underlined:focus {
  outline: none;
  text-decoration: none !important;
}

.underlined:after {
  content: '';
  height: 2px;
  transform: scaleX(0);
  transition: transform 0.25s ease;
  transform-origin: left;
  left: 0;
  bottom: -4px;
  width: 100%;
  display: block;
  position: absolute;
}

.underlined:hover:after,
.underlined:focus:after,
.active.underlined:after {
  background-color: currentColor;
  transform: scaleX(1);
}

@media (prefers-reduced-motion) {
  .underlined:after {
    opacity: 0;
    transition: opacity 0.25s ease;
  }

  .underlined:hover:after,
  .underlined:focus:after,
  .active.underlined:after {
    opacity: 1;
  }
}

/* transistor embed has rounded edges with white background 😬 */
.dark iframe[src*='transistor'] {
  border-radius: 8px;
}

.yt-lite {
  border-radius: 0.5rem;
  max-height: 90vh;
  max-width: 90vw;
}
/* this is for react-lite-youtube-embed */
/* Annoyingly the background image can be a pixel taller than the video in front of it when the video is playing */
.lyt-activated {
  background-image: none !important;
}

.quote-child > *:first-child:before {
  content: '“';
}
.quote-child > *:last-child:after {
  content: '”';
}
